{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sahil\\\\Desktop\\\\NewRoamAI\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px',\n  borderRadius: '8px'\n};\nfunction Map({\n  markers = [],\n  onMarkerClick\n}) {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [mapConfig, setMapConfig] = useState({\n    center: {\n      lat: 40.6304,\n      lng: -74.0212\n    },\n    zoom: 14\n  });\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: ['places']\n  });\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(position => {\n        const newLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(newLocation);\n        setMapConfig(prev => ({\n          ...prev,\n          center: newLocation\n        }));\n      }, error => {\n        console.error('Error getting location:', error);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      });\n    }\n  }, []);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 25\n  }, this);\n  const userMarkerIcon = {\n    path: 2,\n    // Using number instead of google.maps.SymbolPath.CIRCLE\n    scale: 8,\n    fillColor: '#4285F4',\n    fillOpacity: 1,\n    strokeColor: '#ffffff',\n    strokeWeight: 2\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: mapConfig.center,\n    zoom: mapConfig.zoom,\n    children: [userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      icon: userMarkerIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: marker.position,\n      onClick: () => onMarkerClick(marker)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"UKTRLMYYAxAY5dJjEwGPHpi9kQg=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","useJsApiLoader","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","borderRadius","Map","markers","onMarkerClick","_s","userLocation","setUserLocation","mapConfig","setMapConfig","center","lat","lng","zoom","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","navigator","geolocation","watchPosition","position","newLocation","coords","latitude","longitude","prev","error","console","enableHighAccuracy","timeout","maximumAge","children","fileName","_jsxFileName","lineNumber","columnNumber","userMarkerIcon","path","scale","fillColor","fillOpacity","strokeColor","strokeWeight","mapContainerStyle","icon","map","marker","index","onClick","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Sahil/Desktop/NewRoamAI/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px',\r\n  borderRadius: '8px'\r\n};\r\n\r\nfunction Map({ markers = [], onMarkerClick }) {\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [mapConfig, setMapConfig] = useState({\r\n    center: { lat: 40.6304, lng: -74.0212 },\r\n    zoom: 14\r\n  });\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries: ['places']\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.watchPosition(\r\n        (position) => {\r\n          const newLocation = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          };\r\n          setUserLocation(newLocation);\r\n          setMapConfig(prev => ({ ...prev, center: newLocation }));\r\n        },\r\n        (error) => {\r\n          console.error('Error getting location:', error);\r\n        },\r\n        {\r\n          enableHighAccuracy: true,\r\n          timeout: 5000,\r\n          maximumAge: 0\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n\r\n  const userMarkerIcon = {\r\n    path: 2, // Using number instead of google.maps.SymbolPath.CIRCLE\r\n    scale: 8,\r\n    fillColor: '#4285F4',\r\n    fillOpacity: 1,\r\n    strokeColor: '#ffffff',\r\n    strokeWeight: 2,\r\n  };\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={mapConfig.center}\r\n      zoom={mapConfig.zoom}\r\n    >\r\n      {userLocation && (\r\n        <Marker\r\n          position={userLocation}\r\n          icon={userMarkerIcon}\r\n        />\r\n      )}\r\n      {markers.map((marker, index) => (\r\n        <Marker\r\n          key={index}\r\n          position={marker.position}\r\n          onClick={() => onMarkerClick(marker)}\r\n        />\r\n      ))}\r\n    </GoogleMap>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}