{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sahil\\\\Desktop\\\\NewRoamAI\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px',\n  borderRadius: '8px'\n};\nfunction Map({\n  markers = [],\n  onMarkerClick\n}) {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [mapConfig, setMapConfig] = useState({\n    center: {\n      lat: 40.6304,\n      lng: -74.0212\n    },\n    zoom: 14\n  });\n  const [mapLoaded, setMapLoaded] = useState(false);\n  useEffect(() => {\n    const loadMap = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/location');\n        const {\n          apiKey\n        } = response.data.data;\n        const loader = new window.google.maps.plugins.loader.Loader({\n          apiKey,\n          version: 'weekly',\n          libraries: ['places']\n        });\n        await loader.load();\n        setMapLoaded(true);\n      } catch (error) {\n        console.error('Error loading map:', error);\n      }\n    };\n    loadMap();\n  }, []);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(position => {\n        const newLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(newLocation);\n        setMapConfig(prev => ({\n          ...prev,\n          center: newLocation\n        }));\n      }, error => {\n        console.error('Error getting location:', error);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      });\n    }\n  }, []);\n  if (!mapLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: mapConfig.center,\n    zoom: mapConfig.zoom,\n    children: [userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      icon: {\n        path: 2,\n        scale: 8,\n        fillColor: '#4285F4',\n        fillOpacity: 1,\n        strokeColor: '#ffffff',\n        strokeWeight: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: marker.position,\n      onClick: () => onMarkerClick(marker)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"KzuBYJ84a/ukGeSsYblSt1sJe5I=\");\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","useJsApiLoader","Marker","axios","jsxDEV","_jsxDEV","containerStyle","width","height","borderRadius","Map","markers","onMarkerClick","_s","userLocation","setUserLocation","mapConfig","setMapConfig","center","lat","lng","zoom","mapLoaded","setMapLoaded","loadMap","response","get","apiKey","data","loader","window","google","maps","plugins","Loader","version","libraries","load","error","console","navigator","geolocation","watchPosition","position","newLocation","coords","latitude","longitude","prev","enableHighAccuracy","timeout","maximumAge","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","icon","path","scale","fillColor","fillOpacity","strokeColor","strokeWeight","map","marker","index","onClick","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Sahil/Desktop/NewRoamAI/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px',\r\n  borderRadius: '8px'\r\n};\r\n\r\nfunction Map({ markers = [], onMarkerClick }) {\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [mapConfig, setMapConfig] = useState({\r\n    center: { lat: 40.6304, lng: -74.0212 },\r\n    zoom: 14\r\n  });\r\n  const [mapLoaded, setMapLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadMap = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/location');\r\n        const { apiKey } = response.data.data;\r\n        \r\n        const loader = new window.google.maps.plugins.loader.Loader({\r\n          apiKey,\r\n          version: 'weekly',\r\n          libraries: ['places']\r\n        });\r\n\r\n        await loader.load();\r\n        setMapLoaded(true);\r\n      } catch (error) {\r\n        console.error('Error loading map:', error);\r\n      }\r\n    };\r\n\r\n    loadMap();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.watchPosition(\r\n        (position) => {\r\n          const newLocation = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          };\r\n          setUserLocation(newLocation);\r\n          setMapConfig(prev => ({ ...prev, center: newLocation }));\r\n        },\r\n        (error) => {\r\n          console.error('Error getting location:', error);\r\n        },\r\n        {\r\n          enableHighAccuracy: true,\r\n          timeout: 5000,\r\n          maximumAge: 0\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  if (!mapLoaded) return <div>Loading map...</div>;\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={mapConfig.center}\r\n      zoom={mapConfig.zoom}\r\n    >\r\n      {userLocation && (\r\n        <Marker\r\n          position={userLocation}\r\n          icon={{\r\n            path: 2,\r\n            scale: 8,\r\n            fillColor: '#4285F4',\r\n            fillOpacity: 1,\r\n            strokeColor: '#ffffff',\r\n            strokeWeight: 2,\r\n          }}\r\n        />\r\n      )}\r\n      {markers.map((marker, index) => (\r\n        <Marker\r\n          key={index}\r\n          position={marker.position}\r\n          onClick={() => onMarkerClick(marker)}\r\n        />\r\n      ))}\r\n    </GoogleMap>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}