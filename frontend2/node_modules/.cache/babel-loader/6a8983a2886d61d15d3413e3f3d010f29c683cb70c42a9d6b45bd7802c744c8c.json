{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sahil\\\\Desktop\\\\NewRoamAI\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: 'calc(100vh - 156px)',\n  borderRadius: '8px',\n  marginBottom: '56px'\n};\nfunction Map() {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [mapConfig, setMapConfig] = useState({\n    center: {\n      lat: 40.6304,\n      lng: -74.0212\n    },\n    zoom: 14\n  });\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: ['places']\n  });\n\n  // Fetch places from backend\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const response = await axios.get('/api/places');\n        setPlaces(response.data);\n      } catch (error) {\n        console.error('Error fetching places:', error);\n      }\n    };\n    fetchPlaces();\n  }, []);\n\n  // Get user's location\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const newLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(newLocation);\n        setMapConfig(prev => ({\n          ...prev,\n          center: newLocation\n        }));\n      }, error => {\n        console.error('Error getting location:', error);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      });\n    }\n  }, []);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 25\n  }, this);\n  const userMarkerIcon = {\n    path: 0,\n    scale: 8,\n    fillColor: '#4285F4',\n    fillOpacity: 1,\n    strokeColor: '#ffffff',\n    strokeWeight: 2\n  };\n\n  // Custom marker icons based on content type\n  const getMarkerIcon = type => ({\n    path: 0,\n    scale: 8,\n    fillColor: type === 'video' ? '#FF0000' : '#00FF00',\n    // Red for videos, green for images\n    fillOpacity: 1,\n    strokeColor: '#ffffff',\n    strokeWeight: 2\n  });\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: mapConfig.center,\n    zoom: mapConfig.zoom,\n    onClick: () => setSelectedPlace(null),\n    children: [userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      icon: userMarkerIcon,\n      title: \"Your Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), places.map(place => /*#__PURE__*/_jsxDEV(Marker, {\n      position: place.position,\n      icon: getMarkerIcon(place.type),\n      onClick: () => setSelectedPlace(place)\n    }, place.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)), selectedPlace && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: selectedPlace.position,\n      onCloseClick: () => setSelectedPlace(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedPlace.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedPlace.place_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", selectedPlace.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"ySVzIF2UnrdDivVXrSL+dHUwgTI=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","useJsApiLoader","Marker","InfoWindow","axios","jsxDEV","_jsxDEV","containerStyle","width","height","borderRadius","marginBottom","Map","_s","userLocation","setUserLocation","places","setPlaces","selectedPlace","setSelectedPlace","mapConfig","setMapConfig","center","lat","lng","zoom","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","fetchPlaces","response","get","data","error","console","navigator","geolocation","getCurrentPosition","position","newLocation","coords","latitude","longitude","prev","enableHighAccuracy","timeout","maximumAge","children","fileName","_jsxFileName","lineNumber","columnNumber","userMarkerIcon","path","scale","fillColor","fillOpacity","strokeColor","strokeWeight","getMarkerIcon","type","mapContainerStyle","onClick","icon","title","map","place","onCloseClick","place_name","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Sahil/Desktop/NewRoamAI/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: 'calc(100vh - 156px)',\r\n  borderRadius: '8px',\r\n  marginBottom: '56px'\r\n};\r\n\r\nfunction Map() {\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [places, setPlaces] = useState([]);\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n  const [mapConfig, setMapConfig] = useState({\r\n    center: { lat: 40.6304, lng: -74.0212 },\r\n    zoom: 14\r\n  });\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries: ['places']\r\n  });\r\n\r\n  // Fetch places from backend\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const response = await axios.get('/api/places');\r\n        setPlaces(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching places:', error);\r\n      }\r\n    };\r\n    fetchPlaces();\r\n  }, []);\r\n\r\n  // Get user's location\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const newLocation = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          };\r\n          setUserLocation(newLocation);\r\n          setMapConfig(prev => ({ ...prev, center: newLocation }));\r\n        },\r\n        (error) => {\r\n          console.error('Error getting location:', error);\r\n        },\r\n        {\r\n          enableHighAccuracy: true,\r\n          timeout: 5000,\r\n          maximumAge: 0\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  if (!isLoaded) return <div>Loading map...</div>;\r\n\r\n  const userMarkerIcon = {\r\n    path: 0,\r\n    scale: 8,\r\n    fillColor: '#4285F4',\r\n    fillOpacity: 1,\r\n    strokeColor: '#ffffff',\r\n    strokeWeight: 2,\r\n  };\r\n\r\n  // Custom marker icons based on content type\r\n  const getMarkerIcon = (type) => ({\r\n    path: 0,\r\n    scale: 8,\r\n    fillColor: type === 'video' ? '#FF0000' : '#00FF00', // Red for videos, green for images\r\n    fillOpacity: 1,\r\n    strokeColor: '#ffffff',\r\n    strokeWeight: 2,\r\n  });\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={mapConfig.center}\r\n      zoom={mapConfig.zoom}\r\n      onClick={() => setSelectedPlace(null)}\r\n    >\r\n      {userLocation && (\r\n        <Marker\r\n          position={userLocation}\r\n          icon={userMarkerIcon}\r\n          title=\"Your Location\"\r\n        />\r\n      )}\r\n      \r\n      {places.map((place) => (\r\n        <Marker\r\n          key={place.id}\r\n          position={place.position}\r\n          icon={getMarkerIcon(place.type)}\r\n          onClick={() => setSelectedPlace(place)}\r\n        />\r\n      ))}\r\n\r\n      {selectedPlace && (\r\n        <InfoWindow\r\n          position={selectedPlace.position}\r\n          onCloseClick={() => setSelectedPlace(null)}\r\n        >\r\n          <div>\r\n            <h3>{selectedPlace.title}</h3>\r\n            <p>{selectedPlace.place_name}</p>\r\n            <p>Type: {selectedPlace.type}</p>\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n    </GoogleMap>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}