{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sahil\\\\Desktop\\\\NewRoamAI\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _window$google,\n  _window$google$maps,\n  _window$google$maps$S,\n  _window$google2,\n  _window$google2$maps,\n  _window$google2$maps$,\n  _window$google3,\n  _window$google3$maps,\n  _window$google3$maps$,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: 'calc(100vh - 156px)',\n  borderRadius: '8px',\n  marginBottom: '56px'\n};\n\n// Define marker icons\nconst markerIcons = {\n  video: {\n    path: ((_window$google = window.google) === null || _window$google === void 0 ? void 0 : (_window$google$maps = _window$google.maps) === null || _window$google$maps === void 0 ? void 0 : (_window$google$maps$S = _window$google$maps.SymbolPath) === null || _window$google$maps$S === void 0 ? void 0 : _window$google$maps$S.CIRCLE) || 0,\n    scale: 8,\n    fillColor: '#FF0000',\n    fillOpacity: 1,\n    strokeColor: '#ffffff',\n    strokeWeight: 2\n  },\n  image: {\n    path: ((_window$google2 = window.google) === null || _window$google2 === void 0 ? void 0 : (_window$google2$maps = _window$google2.maps) === null || _window$google2$maps === void 0 ? void 0 : (_window$google2$maps$ = _window$google2$maps.SymbolPath) === null || _window$google2$maps$ === void 0 ? void 0 : _window$google2$maps$.CIRCLE) || 0,\n    scale: 8,\n    fillColor: '#00FF00',\n    fillOpacity: 1,\n    strokeColor: '#ffffff',\n    strokeWeight: 2\n  },\n  blog: {\n    path: ((_window$google3 = window.google) === null || _window$google3 === void 0 ? void 0 : (_window$google3$maps = _window$google3.maps) === null || _window$google3$maps === void 0 ? void 0 : (_window$google3$maps$ = _window$google3$maps.SymbolPath) === null || _window$google3$maps$ === void 0 ? void 0 : _window$google3$maps$.CIRCLE) || 0,\n    scale: 8,\n    fillColor: '#0000FF',\n    fillOpacity: 1,\n    strokeColor: '#ffffff',\n    strokeWeight: 2\n  }\n};\nfunction Map() {\n  _s();\n  var _window$google4, _window$google4$maps, _window$google4$maps$;\n  const [userLocation, setUserLocation] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [mapConfig, setMapConfig] = useState({\n    // Center on Dyker Heights initially\n    center: {\n      lat: 40.616,\n      lng: -74.018\n    },\n    zoom: 15\n  });\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: ['places']\n  });\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const response = await axios.get('/api/places');\n        console.log('Fetched places:', response.data); // Debug log\n        setPlaces(response.data);\n      } catch (error) {\n        console.error('Error fetching places:', error);\n      }\n    };\n    fetchPlaces();\n  }, []);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const newLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(newLocation);\n      }, error => {\n        console.error('Error getting location:', error);\n      });\n    }\n  }, []);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 25\n  }, this);\n  const userMarkerIcon = {\n    path: ((_window$google4 = window.google) === null || _window$google4 === void 0 ? void 0 : (_window$google4$maps = _window$google4.maps) === null || _window$google4$maps === void 0 ? void 0 : (_window$google4$maps$ = _window$google4$maps.SymbolPath) === null || _window$google4$maps$ === void 0 ? void 0 : _window$google4$maps$.CIRCLE) || 0,\n    scale: 8,\n    fillColor: '#4285F4',\n    fillOpacity: 1,\n    strokeColor: '#ffffff',\n    strokeWeight: 2\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: mapConfig.center,\n    zoom: mapConfig.zoom,\n    onClick: () => setSelectedPlace(null),\n    children: [userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      icon: userMarkerIcon,\n      title: \"Your Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), places.map(place => /*#__PURE__*/_jsxDEV(Marker, {\n      position: place.position,\n      icon: markerIcons[place.type],\n      onClick: () => setSelectedPlace(place)\n    }, place.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)), selectedPlace && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: selectedPlace.position,\n      onCloseClick: () => setSelectedPlace(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '8px',\n          maxWidth: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0 0 8px 0',\n            fontSize: '16px'\n          },\n          children: selectedPlace.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '4px 0',\n            fontSize: '14px'\n          },\n          children: selectedPlace.place_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '4px 0',\n            fontSize: '12px',\n            color: '#666'\n          },\n          children: [\"Type: \", selectedPlace.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '4px 0',\n            fontSize: '12px'\n          },\n          children: [\"By: \", selectedPlace.creator]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"DtBZ1bS2WUNnVNKtsrk3syksqCY=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","useJsApiLoader","Marker","InfoWindow","axios","jsxDEV","_jsxDEV","containerStyle","width","height","borderRadius","marginBottom","markerIcons","video","path","_window$google","window","google","_window$google$maps","maps","_window$google$maps$S","SymbolPath","CIRCLE","scale","fillColor","fillOpacity","strokeColor","strokeWeight","image","_window$google2","_window$google2$maps","_window$google2$maps$","blog","_window$google3","_window$google3$maps","_window$google3$maps$","Map","_s","_window$google4","_window$google4$maps","_window$google4$maps$","userLocation","setUserLocation","places","setPlaces","selectedPlace","setSelectedPlace","mapConfig","setMapConfig","center","lat","lng","zoom","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","fetchPlaces","response","get","console","log","data","error","navigator","geolocation","getCurrentPosition","position","newLocation","coords","latitude","longitude","children","fileName","_jsxFileName","lineNumber","columnNumber","userMarkerIcon","mapContainerStyle","onClick","icon","title","map","place","type","onCloseClick","style","padding","maxWidth","margin","fontSize","place_name","color","creator","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Sahil/Desktop/NewRoamAI/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: 'calc(100vh - 156px)',\r\n  borderRadius: '8px',\r\n  marginBottom: '56px'\r\n};\r\n\r\n// Define marker icons\r\nconst markerIcons = {\r\n  video: {\r\n    path: window.google?.maps?.SymbolPath?.CIRCLE || 0,\r\n    scale: 8,\r\n    fillColor: '#FF0000',\r\n    fillOpacity: 1,\r\n    strokeColor: '#ffffff',\r\n    strokeWeight: 2,\r\n  },\r\n  image: {\r\n    path: window.google?.maps?.SymbolPath?.CIRCLE || 0,\r\n    scale: 8,\r\n    fillColor: '#00FF00',\r\n    fillOpacity: 1,\r\n    strokeColor: '#ffffff',\r\n    strokeWeight: 2,\r\n  },\r\n  blog: {\r\n    path: window.google?.maps?.SymbolPath?.CIRCLE || 0,\r\n    scale: 8,\r\n    fillColor: '#0000FF',\r\n    fillOpacity: 1,\r\n    strokeColor: '#ffffff',\r\n    strokeWeight: 2,\r\n  }\r\n};\r\n\r\nfunction Map() {\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [places, setPlaces] = useState([]);\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n  const [mapConfig, setMapConfig] = useState({\r\n    // Center on Dyker Heights initially\r\n    center: { lat: 40.616, lng: -74.018 },\r\n    zoom: 15\r\n  });\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries: ['places']\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const response = await axios.get('/api/places');\r\n        console.log('Fetched places:', response.data); // Debug log\r\n        setPlaces(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching places:', error);\r\n      }\r\n    };\r\n    fetchPlaces();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const newLocation = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          };\r\n          setUserLocation(newLocation);\r\n        },\r\n        (error) => {\r\n          console.error('Error getting location:', error);\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  if (!isLoaded) return <div>Loading map...</div>;\r\n\r\n  const userMarkerIcon = {\r\n    path: window.google?.maps?.SymbolPath?.CIRCLE || 0,\r\n    scale: 8,\r\n    fillColor: '#4285F4',\r\n    fillOpacity: 1,\r\n    strokeColor: '#ffffff',\r\n    strokeWeight: 2,\r\n  };\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={mapConfig.center}\r\n      zoom={mapConfig.zoom}\r\n      onClick={() => setSelectedPlace(null)}\r\n    >\r\n      {userLocation && (\r\n        <Marker\r\n          position={userLocation}\r\n          icon={userMarkerIcon}\r\n          title=\"Your Location\"\r\n        />\r\n      )}\r\n      \r\n      {places.map((place) => (\r\n        <Marker\r\n          key={place.id}\r\n          position={place.position}\r\n          icon={markerIcons[place.type]}\r\n          onClick={() => setSelectedPlace(place)}\r\n        />\r\n      ))}\r\n\r\n      {selectedPlace && (\r\n        <InfoWindow\r\n          position={selectedPlace.position}\r\n          onCloseClick={() => setSelectedPlace(null)}\r\n        >\r\n          <div style={{ padding: '8px', maxWidth: '200px' }}>\r\n            <h3 style={{ margin: '0 0 8px 0', fontSize: '16px' }}>{selectedPlace.title}</h3>\r\n            <p style={{ margin: '4px 0', fontSize: '14px' }}>{selectedPlace.place_name}</p>\r\n            <p style={{ margin: '4px 0', fontSize: '12px', color: '#666' }}>\r\n              Type: {selectedPlace.type}\r\n            </p>\r\n            <p style={{ margin: '4px 0', fontSize: '12px' }}>\r\n              By: {selectedPlace.creator}\r\n            </p>\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n    </GoogleMap>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}