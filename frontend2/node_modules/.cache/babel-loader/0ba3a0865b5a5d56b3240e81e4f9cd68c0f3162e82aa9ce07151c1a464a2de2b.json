{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sahil\\\\Desktop\\\\NewRoamAI\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: 'calc(100vh - 156px)',\n  borderRadius: '8px',\n  marginBottom: '56px'\n};\nfunction Map({\n  onMarkerClick\n}) {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [contentLocations, setContentLocations] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [mapConfig, setMapConfig] = useState({\n    center: {\n      lat: 40.7580,\n      lng: -73.9855\n    },\n    // Centered on Times Square initially\n    zoom: 12\n  });\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: ['places']\n  });\n\n  // Get user's location\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const newLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(newLocation);\n        setMapConfig(prev => ({\n          ...prev,\n          center: newLocation\n        }));\n      }, error => {\n        console.error('Error getting location:', error);\n      });\n    }\n  }, []);\n\n  // Fetch content locations\n  useEffect(() => {\n    const fetchContentLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/places/all');\n        if (response.data.status === 'success') {\n          console.log('Fetched locations:', response.data.data);\n          setContentLocations(response.data.data);\n        }\n      } catch (error) {\n        console.error('Error fetching content locations:', error);\n      }\n    };\n    fetchContentLocations();\n  }, []);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 27\n  }, this);\n\n  // Define marker icons\n  const userMarkerIcon = {\n    path: 0,\n    // Circle path\n    scale: 8,\n    fillColor: '#4285F4',\n    // Blue for user location\n    fillOpacity: 1,\n    strokeColor: '#FFFFFF',\n    strokeWeight: 2\n  };\n  const contentMarkerIcon = {\n    path: 0,\n    // Circle path\n    scale: 8,\n    fillColor: '#FF0000',\n    // Red for content locations\n    fillOpacity: 1,\n    strokeColor: '#FFFFFF',\n    strokeWeight: 2\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: mapConfig.center,\n    zoom: mapConfig.zoom,\n    onClick: () => setSelectedMarker(null),\n    children: [userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      icon: userMarkerIcon,\n      title: \"Your Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), contentLocations.map(content => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: content.position.lat,\n        lng: content.position.lng\n      },\n      icon: contentMarkerIcon,\n      onClick: () => setSelectedMarker(content)\n    }, content.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: selectedMarker.position,\n      onCloseClick: () => setSelectedMarker(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0 0 5px 0',\n            fontSize: '16px'\n          },\n          children: selectedMarker.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 5px 0',\n            fontSize: '14px'\n          },\n          children: selectedMarker.place_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), selectedMarker.media.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedMarker.media.image_url,\n          alt: selectedMarker.title,\n          style: {\n            width: '100%',\n            marginBottom: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0',\n            fontSize: '12px'\n          },\n          children: selectedMarker.description.length > 100 ? `${selectedMarker.description.substring(0, 100)}...` : selectedMarker.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"kDMn6oKjDwg6R2Waxx6yrkcVsSo=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","useJsApiLoader","Marker","InfoWindow","axios","jsxDEV","_jsxDEV","containerStyle","width","height","borderRadius","marginBottom","Map","onMarkerClick","_s","userLocation","setUserLocation","contentLocations","setContentLocations","selectedMarker","setSelectedMarker","mapConfig","setMapConfig","center","lat","lng","zoom","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","navigator","geolocation","getCurrentPosition","position","newLocation","coords","latitude","longitude","prev","error","console","fetchContentLocations","response","get","data","status","log","children","fileName","_jsxFileName","lineNumber","columnNumber","userMarkerIcon","path","scale","fillColor","fillOpacity","strokeColor","strokeWeight","contentMarkerIcon","mapContainerStyle","onClick","icon","title","map","content","onCloseClick","style","maxWidth","margin","fontSize","place_name","media","image_url","src","alt","description","length","substring","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Sahil/Desktop/NewRoamAI/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: 'calc(100vh - 156px)',\r\n    borderRadius: '8px',\r\n    marginBottom: '56px'\r\n};\r\n\r\nfunction Map({ onMarkerClick }) {\r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const [contentLocations, setContentLocations] = useState([]);\r\n    const [selectedMarker, setSelectedMarker] = useState(null);\r\n    const [mapConfig, setMapConfig] = useState({\r\n        center: { lat: 40.7580, lng: -73.9855 },  // Centered on Times Square initially\r\n        zoom: 12\r\n    });\r\n\r\n    const { isLoaded } = useJsApiLoader({\r\n        id: 'google-map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n        libraries: ['places']\r\n    });\r\n\r\n    // Get user's location\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const newLocation = {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude\r\n                    };\r\n                    setUserLocation(newLocation);\r\n                    setMapConfig(prev => ({ ...prev, center: newLocation }));\r\n                },\r\n                (error) => {\r\n                    console.error('Error getting location:', error);\r\n                }\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    // Fetch content locations\r\n    useEffect(() => {\r\n        const fetchContentLocations = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/places/all');\r\n                if (response.data.status === 'success') {\r\n                    console.log('Fetched locations:', response.data.data);\r\n                    setContentLocations(response.data.data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching content locations:', error);\r\n            }\r\n        };\r\n\r\n        fetchContentLocations();\r\n    }, []);\r\n\r\n    if (!isLoaded) return <div>Loading map...</div>;\r\n\r\n    // Define marker icons\r\n    const userMarkerIcon = {\r\n        path: 0,  // Circle path\r\n        scale: 8,\r\n        fillColor: '#4285F4',  // Blue for user location\r\n        fillOpacity: 1,\r\n        strokeColor: '#FFFFFF',\r\n        strokeWeight: 2,\r\n    };\r\n\r\n    const contentMarkerIcon = {\r\n        path: 0,  // Circle path\r\n        scale: 8,\r\n        fillColor: '#FF0000',  // Red for content locations\r\n        fillOpacity: 1,\r\n        strokeColor: '#FFFFFF',\r\n        strokeWeight: 2,\r\n    };\r\n\r\n    return (\r\n        <GoogleMap\r\n            mapContainerStyle={containerStyle}\r\n            center={mapConfig.center}\r\n            zoom={mapConfig.zoom}\r\n            onClick={() => setSelectedMarker(null)}\r\n        >\r\n            {/* User Location Marker */}\r\n            {userLocation && (\r\n                <Marker\r\n                    position={userLocation}\r\n                    icon={userMarkerIcon}\r\n                    title=\"Your Location\"\r\n                />\r\n            )}\r\n\r\n            {/* Content Location Markers */}\r\n            {contentLocations.map((content) => (\r\n                <Marker\r\n                    key={content.id}\r\n                    position={{\r\n                        lat: content.position.lat,\r\n                        lng: content.position.lng\r\n                    }}\r\n                    icon={contentMarkerIcon}\r\n                    onClick={() => setSelectedMarker(content)}\r\n                />\r\n            ))}\r\n\r\n            {/* Info Window for selected marker */}\r\n            {selectedMarker && (\r\n                <InfoWindow\r\n                    position={selectedMarker.position}\r\n                    onCloseClick={() => setSelectedMarker(null)}\r\n                >\r\n                    <div style={{ maxWidth: '200px' }}>\r\n                        <h3 style={{ margin: '0 0 5px 0', fontSize: '16px' }}>\r\n                            {selectedMarker.title}\r\n                        </h3>\r\n                        <p style={{ margin: '0 0 5px 0', fontSize: '14px' }}>\r\n                            {selectedMarker.place_name}\r\n                        </p>\r\n                        {selectedMarker.media.image_url && (\r\n                            <img \r\n                                src={selectedMarker.media.image_url} \r\n                                alt={selectedMarker.title}\r\n                                style={{ width: '100%', marginBottom: '5px' }}\r\n                            />\r\n                        )}\r\n                        <p style={{ margin: '0', fontSize: '12px' }}>\r\n                            {selectedMarker.description.length > 100 \r\n                                ? `${selectedMarker.description.substring(0, 100)}...` \r\n                                : selectedMarker.description}\r\n                        </p>\r\n                    </div>\r\n                </InfoWindow>\r\n            )}\r\n        </GoogleMap>\r\n    );\r\n}\r\n\r\nexport default React.memo(Map);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,cAAc,EAAEC,MAAM,EAAEC,UAAU,QAAQ,wBAAwB;AACtF,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,qBAAqB;EAC7BC,YAAY,EAAE,KAAK;EACnBC,YAAY,EAAE;AAClB,CAAC;AAED,SAASC,GAAGA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC;IACvCyB,MAAM,EAAE;MAAEC,GAAG,EAAE,OAAO;MAAEC,GAAG,EAAE,CAAC;IAAQ,CAAC;IAAG;IAC1CC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,MAAM;IAAEC;EAAS,CAAC,GAAG1B,cAAc,CAAC;IAChC2B,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC,6BAA6B;IAC3DC,SAAS,EAAE,CAAC,QAAQ;EACxB,CAAC,CAAC;;EAEF;EACAlC,SAAS,CAAC,MAAM;IACZ,IAAImC,SAAS,CAACC,WAAW,EAAE;MACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACnCC,QAAQ,IAAK;QACV,MAAMC,WAAW,GAAG;UAChBd,GAAG,EAAEa,QAAQ,CAACE,MAAM,CAACC,QAAQ;UAC7Bf,GAAG,EAAEY,QAAQ,CAACE,MAAM,CAACE;QACzB,CAAC;QACDzB,eAAe,CAACsB,WAAW,CAAC;QAC5BhB,YAAY,CAACoB,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAEnB,MAAM,EAAEe;QAAY,CAAC,CAAC,CAAC;MAC5D,CAAC,EACAK,KAAK,IAAK;QACPC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD,CACJ,CAAC;IACL;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA5C,SAAS,CAAC,MAAM;IACZ,MAAM8C,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,GAAG,CAAC,sCAAsC,CAAC;QACxE,IAAID,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;UACpCL,OAAO,CAACM,GAAG,CAAC,oBAAoB,EAAEJ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;UACrD9B,mBAAmB,CAAC4B,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;QAC3C;MACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC7D;IACJ,CAAC;IAEDE,qBAAqB,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAAClB,QAAQ,EAAE,oBAAOrB,OAAA;IAAA6C,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAE/C;EACA,MAAMC,cAAc,GAAG;IACnBC,IAAI,EAAE,CAAC;IAAG;IACVC,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE,SAAS;IAAG;IACvBC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE;EAClB,CAAC;EAED,MAAMC,iBAAiB,GAAG;IACtBN,IAAI,EAAE,CAAC;IAAG;IACVC,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE,SAAS;IAAG;IACvBC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE;EAClB,CAAC;EAED,oBACIxD,OAAA,CAACN,SAAS;IACNgE,iBAAiB,EAAEzD,cAAe;IAClCgB,MAAM,EAAEF,SAAS,CAACE,MAAO;IACzBG,IAAI,EAAEL,SAAS,CAACK,IAAK;IACrBuC,OAAO,EAAEA,CAAA,KAAM7C,iBAAiB,CAAC,IAAI,CAAE;IAAA+B,QAAA,GAGtCpC,YAAY,iBACTT,OAAA,CAACJ,MAAM;MACHmC,QAAQ,EAAEtB,YAAa;MACvBmD,IAAI,EAAEV,cAAe;MACrBW,KAAK,EAAC;IAAe;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACJ,EAGAtC,gBAAgB,CAACmD,GAAG,CAAEC,OAAO,iBAC1B/D,OAAA,CAACJ,MAAM;MAEHmC,QAAQ,EAAE;QACNb,GAAG,EAAE6C,OAAO,CAAChC,QAAQ,CAACb,GAAG;QACzBC,GAAG,EAAE4C,OAAO,CAAChC,QAAQ,CAACZ;MAC1B,CAAE;MACFyC,IAAI,EAAEH,iBAAkB;MACxBE,OAAO,EAAEA,CAAA,KAAM7C,iBAAiB,CAACiD,OAAO;IAAE,GANrCA,OAAO,CAACzC,EAAE;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOlB,CACJ,CAAC,EAGDpC,cAAc,iBACXb,OAAA,CAACH,UAAU;MACPkC,QAAQ,EAAElB,cAAc,CAACkB,QAAS;MAClCiC,YAAY,EAAEA,CAAA,KAAMlD,iBAAiB,CAAC,IAAI,CAAE;MAAA+B,QAAA,eAE5C7C,OAAA;QAAKiE,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAQ,CAAE;QAAArB,QAAA,gBAC9B7C,OAAA;UAAIiE,KAAK,EAAE;YAAEE,MAAM,EAAE,WAAW;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAvB,QAAA,EAChDhC,cAAc,CAACgD;QAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACLjD,OAAA;UAAGiE,KAAK,EAAE;YAAEE,MAAM,EAAE,WAAW;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAvB,QAAA,EAC/ChC,cAAc,CAACwD;QAAU;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,EACHpC,cAAc,CAACyD,KAAK,CAACC,SAAS,iBAC3BvE,OAAA;UACIwE,GAAG,EAAE3D,cAAc,CAACyD,KAAK,CAACC,SAAU;UACpCE,GAAG,EAAE5D,cAAc,CAACgD,KAAM;UAC1BI,KAAK,EAAE;YAAE/D,KAAK,EAAE,MAAM;YAAEG,YAAY,EAAE;UAAM;QAAE;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CACJ,eACDjD,OAAA;UAAGiE,KAAK,EAAE;YAAEE,MAAM,EAAE,GAAG;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAvB,QAAA,EACvChC,cAAc,CAAC6D,WAAW,CAACC,MAAM,GAAG,GAAG,GAClC,GAAG9D,cAAc,CAAC6D,WAAW,CAACE,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,GACpD/D,cAAc,CAAC6D;QAAW;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACf;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEpB;AAACzC,EAAA,CAnIQF,GAAG;EAAA,QASaX,cAAc;AAAA;AAAAkF,EAAA,GAT9BvE,GAAG;AAqIZ,eAAAwE,GAAA,gBAAevF,KAAK,CAACwF,IAAI,CAACzE,GAAG,CAAC;AAAC,IAAAuE,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}